name=My Plugin

wizard.project.display.name=Backbase Service
wizard.project.command.name=Create New Backbase project

action.add.persistence.support.dialog.title=Add Persistence Support
action.add.modules.dialog.title=Add SSDK module

action.add.persistence.support.dialog.pom=Add pom.xml required dependencies
action.add.persistence.support.dialog.liquibase=Generate liquibase example files
action.add.persistence.support.dialog.annotation=Add EnableJpaRepositories and EntityScan support

action.add.define.event.dialog.title=Define a New Event
action.add.define.event.dialog.event.name=Event Name
action.add.define.event.dialog.gotit.title=Next steps
action.add.define.event.dialog.gotit.message=Change json schema as required. Then run `mvn install` to generate event classes and finally refresh the project.

action.add.consume.event.dialog.title=Consume an Event
action.add.consume.event.dialog.select.event=Select an event to consume

action.add.openapi.client.title=Generate client
action.add.openapi.message.boat.execution.present=Execution already present in pom.xml
action.add.openapi.message.adding.boat.plugin=Adding boat-maven-plugin in pom.xml
action.add.openapi.client.dialog.title=Generate Client From Openapi Specs
action.add.openapi.client.dialog.serviceName=Service Name
action.add.openapi.client.dialog.inputSpec=Specify a reference to the OpenAPI spec
action.add.openapi.client.dialog.apiPackage=Package used for generated api objects/classes
action.add.openapi.client.dialog.modelPackage=Package used for generated model objects/classes
action.add.openapi.client.dialog.generateConfig=Generate Rest Client Config class
action.add.openapi.client.gotit.message=Run `mvn install` to generate spec classes and then create the Api bean accordingly.
action.add.openapi.add.dependencies=Adding Maven dependencies on pom.xml
action.add.openapi.server.api.title=Generate Server API
action.add.openapi.server.api.select.file=Select open API spec
action.add.openapi.server.api.dialog.title=Generate Server API From Openapi Specs
action.add.openapi.server.api.dialog.serviceName=Service Name
action.add.openapi.server.api.dialog.inputSpec=Specify a reference to the OpenAPI spec
action.add.openapi.server.api.dialog.apiPackage=Package used for generated api objects/classes
action.add.openapi.server.api.dialog.modelPackage=Package used for generated model objects/classes
action.add.openapi.server.api.gotit.message=Run `mvn install` to generate spec classes and implement in your controller.

wizard.project.gotit.title=Backbase Service next steps
wizard.project.gotit.message=Use the 

wizard.behaviour.extension.project.display.name=Backbase Behaviour Extension
wizard.behaviour.extension.project.command.name=Create new behaviour extension project
action.add.extensions.generate.hooks.dialog.title=Generate New Behaviour Extension Hooks
action.add.extensions.hooks.gotit.message=Change routeId based on your service.
action.add.extensions.generate.hooks.name=Behaviour Extension Name



