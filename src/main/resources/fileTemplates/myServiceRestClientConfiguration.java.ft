package fileTemplates;

import com.backbase.buildingblocks.communication.client.ApiClientConfig;
import com.backbase.buildingblocks.communication.http.HttpCommunicationConfiguration;
import ${CLIENT_API_PACKAGE_TRIM_LAST_DOT}.ApiClient;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
@ConfigurationProperties("backbase.communication.services.${CLIENT_SERVICE_NAME_SINGLE_WORD_WITHOUT_SERVICE_LOWERCASE}")
public class ${CLIENT_SERVICE_NAME_CAMELCASE}RestClientConfiguration extends ApiClientConfig {

    public static final String ${CLIENT_SERVICE_NAME_UPPERCASE}_ID = "${CLIENT_SERVICE_NAME_LOWERCASE}";

    public ${CLIENT_SERVICE_NAME_CAMELCASE}RestClientConfiguration() {
        super(${CLIENT_SERVICE_NAME_UPPERCASE}_ID);
    }

    /**
     * TODO
     * Creates a REST client.
     *
     * @return the client.
     */
    //@Bean
    //public ${CLIENT_SERVICE_NAME_WITHOUT_SERVICE_CAMELCASE}Api createGeneratedClassApiClient() {
      //  return new ${CLIENT_SERVICE_NAME_WITHOUT_SERVICE_CAMELCASE}Api(createApiClient());
    //}

    private ApiClient createApiClient() {
        return new ApiClient(getRestTemplate())
                .setBasePath(createBasePath())
                .addDefaultHeader(HttpCommunicationConfiguration.INTERCEPTORS_ENABLED_HEADER, Boolean.TRUE.toString());
    }
}